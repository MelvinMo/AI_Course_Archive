int: edge = 158;
int: node = 30;
array [1..edge,1..2] of int: ed = [|0, 3,
|0, 11,
|0, 12,
|0, 21,
|0, 22,
|0, 23,
|0, 28,
|1, 10,
|1, 13,
|1, 15,
|2, 10,
|2, 15,
|2, 18,
|3, 0,
|3, 12,
|3, 17,
|3, 19,
|3, 20,
|3, 22,
|3, 29,
|3, 30,
|4, 5,
|4, 8,
|4, 12,
|4, 19,
|4, 29,
|5, 4,
|5, 12,
|5, 25,
|6, 17,
|6, 26,
|6, 27,
|7, 8,
|7, 14,
|7, 20,
|7, 24,
|8, 4,
|8, 7,
|8, 20,
|8, 29,
|9, 14,
|9, 17,
|9, 24,
|9, 27,
|9, 30,
|10, 1,
|10, 2,
|10, 15,
|11, 0,
|11, 16,
|11, 17,
|11, 21,
|11, 22,
|11, 23,
|12, 0,
|12, 3,
|12, 4,
|12, 5,
|12, 19,
|12, 25,
|12, 28,
|13, 1,
|13, 15,
|13, 16,
|13, 21,
|14, 7,
|14, 9,
|14, 24,
|15, 1,
|15, 2,
|15, 10,
|15, 13,
|15, 18,
|15, 21,
|15, 28,
|16, 11,
|16, 13,
|16, 17,
|16, 21,
|16, 23,
|16, 26,
|17, 3,
|17, 6,
|17, 9,
|17, 11,
|17, 16,
|17, 22,
|17, 26,
|17, 27,
|18, 2,
|18, 15,
|18, 25,
|18, 28,
|19, 3,
|19, 4,
|19, 12,
|19, 29,
|20, 3,
|20, 7,
|20, 8,
|20, 24,
|20, 29,
|20, 30,
|21, 0,
|21, 11,
|21, 13,
|21, 15,
|21, 16,
|21, 23,
|21, 24,
|21, 25,
|21, 26,
|21, 27,
|21, 29,
|21, 30,
|22, 0,
|22, 3,
|22, 11,
|22, 17,
|23, 0,
|23, 11,
|23, 16,
|23, 21,
|24, 7,
|24, 9,
|24, 14,
|24, 20,
|24, 21,
|24, 30,
|25, 5,
|25, 12,
|25, 18,
|25, 21,
|25, 28,
|26, 6,
|26, 16,
|26, 17,
|26, 21,
|27, 6,
|27, 9,
|27, 17,
|27, 21,
|28, 0,
|28, 12,
|28, 15,
|28, 18,
|28, 25,
|29, 3,
|29, 4,
|29, 8,
|29, 19,
|29, 20,
|29, 21,
|30, 3,
|30, 9,
|30, 20,
|30, 21,
|30, 24,
|];

array [0..node] of var 1..4: color;
constraint forall(c in 1..edge)(color[ed[c, 1]]!= color[ed[c, 2]]);
constraint count(color, 3) < count(color, 4);
constraint count(color, 2) < count(color, 3);
constraint count(color, 1) < count(color, 2);
constraint count(color, 1) > 0;

solve satisfy;